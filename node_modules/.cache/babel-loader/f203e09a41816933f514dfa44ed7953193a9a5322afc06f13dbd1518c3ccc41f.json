{"ast":null,"code":"const downloadOutput = (filename, content) => {\n  if (!content.trim()) {\n    alert('Output is empty, nothing to download.');\n    return;\n  }\n  const blob = new Blob([content], {\n    type: 'text/plain'\n  });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  window.URL.revokeObjectURL(url);\n};\nconst handleViewPdf = pdfString => {\n  try {\n    const byteCharacters = atob(pdfString);\n    const byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers);\n    const blob = new Blob([byteArray], {\n      type: 'application/pdf'\n    });\n    const url = URL.createObjectURL(blob);\n    window.open(url, '_blank');\n  } catch (error) {\n    alert('Make sure the content is PDF in base64');\n  }\n};","map":{"version":3,"names":["downloadOutput","filename","content","trim","alert","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleViewPdf","pdfString","byteCharacters","atob","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","open","error"],"sources":["/home/khweij/Documents/DiffFormatter/DataToolBox/src/utils/Handlers.js"],"sourcesContent":["const downloadOutput = (filename, content) => {\n  if (!content.trim()) {\n    alert('Output is empty, nothing to download.');\n    return;\n  }\n  const blob = new Blob([content], { type: 'text/plain' });\n  const url = window.URL.createObjectURL(blob);\n\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n\n  document.body.removeChild(link);\n  window.URL.revokeObjectURL(url);\n};\n\nconst handleViewPdf = (pdfString) => {\n  try {\n    const byteCharacters = atob(pdfString);\n    const byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers);\n    const blob = new Blob([byteArray], { type: 'application/pdf' });\n    const url = URL.createObjectURL(blob);\n    window.open(url, '_blank'); \n  } catch (error){\n    alert('Make sure the content is PDF in base64');\n  }\n};"],"mappings":"AAAA,MAAMA,cAAc,GAAGA,CAACC,QAAQ,EAAEC,OAAO,KAAK;EAC5C,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC,CAAC,EAAE;IACnBC,KAAK,CAAC,uCAAuC,CAAC;IAC9C;EACF;EACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACJ,OAAO,CAAC,EAAE;IAAEK,IAAI,EAAE;EAAa,CAAC,CAAC;EACxD,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;EAE5C,MAAMO,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;EACxCF,IAAI,CAACG,IAAI,GAAGP,GAAG;EACfI,IAAI,CAACI,QAAQ,GAAGf,QAAQ;EACxBY,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;EAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;EAEZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;EAC/BH,MAAM,CAACC,GAAG,CAACW,eAAe,CAACb,GAAG,CAAC;AACjC,CAAC;AAED,MAAMc,aAAa,GAAIC,SAAS,IAAK;EACnC,IAAI;IACF,MAAMC,cAAc,GAAGC,IAAI,CAACF,SAAS,CAAC;IACtC,MAAMG,WAAW,GAAG,IAAIC,KAAK,CAACH,cAAc,CAACI,MAAM,CAAC;IACpD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,cAAc,CAACI,MAAM,EAAEC,CAAC,EAAE,EAAE;MAC9CH,WAAW,CAACG,CAAC,CAAC,GAAGL,cAAc,CAACM,UAAU,CAACD,CAAC,CAAC;IAC/C;IACA,MAAME,SAAS,GAAG,IAAIC,UAAU,CAACN,WAAW,CAAC;IAC7C,MAAMrB,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACyB,SAAS,CAAC,EAAE;MAAExB,IAAI,EAAE;IAAkB,CAAC,CAAC;IAC/D,MAAMC,GAAG,GAAGE,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;IACrCI,MAAM,CAACwB,IAAI,CAACzB,GAAG,EAAE,QAAQ,CAAC;EAC5B,CAAC,CAAC,OAAO0B,KAAK,EAAC;IACb9B,KAAK,CAAC,wCAAwC,CAAC;EACjD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}