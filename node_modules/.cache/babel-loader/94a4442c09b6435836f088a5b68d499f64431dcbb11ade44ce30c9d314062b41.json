{"ast":null,"code":"var _jsxFileName = \"/home/khweij/Documents/DiffFormatter/DataToolBox/src/DocumentsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport logo from \"./constants/edicom-logo.png\";\nimport InputDocument from \"./components/InputDocuments.js\";\nimport DocumentsButtons from \"./components/DocumentsButtons\";\nimport OutputDocument from \"./components/OutputDocument.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentsPage = () => {\n  _s();\n  const [uploadedFileName, setUploadedFileName] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  const fileInputRef = useRef(null);\n  const [activeInput, setActiveInput] = useState(\"1\");\n  const [fileNames, setFileNames] = useState([]);\n  const navigate = useNavigate();\n  const handleButtonClick = () => {\n    navigate(\"/\");\n  };\n  const handleClear = () => {\n    setFileNames([]);\n    setOutput(\"\");\n    if (fileInputRef.current) {\n      fileInputRef.current.value = \"\";\n    }\n  };\n  const handleConvert = async () => {\n    if (fileNames.length !== 1) {\n      alert(\"Please upload only one file for conversion.\");\n      return;\n    }\n    const file = document.querySelector(\"input[type='file']\").files[0];\n    const fileType = file.type;\n    if (fileType !== \"application/pdf\" && fileType !== \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\") {\n      alert(\"Please upload a PDF or DOCX file.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await fetch(\"http://localhost:8080/diffFormatter/convertFile\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(\"Conversion failed\");\n      }\n      const blob = await response.blob(); // Get the response as a blob for download\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", `converted_file.${fileType === \"application/pdf\" ? \"docx\" : \"pdf\"}`); // Set filename and extension based on conversion type\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    } catch (error) {\n      alert(\"Conversion failed:\", error);\n    }\n  };\n  const handleGlobal = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Logo\",\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Documents Handler (PDF - DOCX)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-page-button\",\n          onClick: handleButtonClick,\n          children: \"JSON - XML - EDI - PDF Handler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InputDocument, {\n      fileNames: fileNames,\n      setFileNames: setFileNames,\n      fileInputRef: fileInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DocumentsButtons, {\n      handleClear: handleClear,\n      handleConvert: handleConvert,\n      handleGlobal: handleGlobal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(OutputDocument, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentsPage, \"ZaXCow3pAintWmfyQO87aOtyyEQ=\", false, function () {\n  return [useNavigate];\n});\n_c = DocumentsPage;\nexport default DocumentsPage;\nvar _c;\n$RefreshReg$(_c, \"DocumentsPage\");","map":{"version":3,"names":["React","useState","useRef","useNavigate","logo","InputDocument","DocumentsButtons","OutputDocument","jsxDEV","_jsxDEV","DocumentsPage","_s","uploadedFileName","setUploadedFileName","output","setOutput","fileInputRef","activeInput","setActiveInput","fileNames","setFileNames","navigate","handleButtonClick","handleClear","current","value","handleConvert","length","alert","file","document","querySelector","files","fileType","type","formData","FormData","append","response","fetch","method","body","ok","Error","blob","url","window","URL","createObjectURL","link","createElement","href","setAttribute","appendChild","click","remove","error","handleGlobal","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/khweij/Documents/DiffFormatter/DataToolBox/src/DocumentsPage.js"],"sourcesContent":["import React, { useState, useRef} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport logo from \"./constants/edicom-logo.png\";\nimport InputDocument from \"./components/InputDocuments.js\";\nimport DocumentsButtons from \"./components/DocumentsButtons\";\nimport OutputDocument from \"./components/OutputDocument.js\"\n\nconst DocumentsPage = () => {\n    const [uploadedFileName, setUploadedFileName] = useState(\"\"); \n    const [output, setOutput] = useState(\"\");\n    const fileInputRef = useRef(null);\n    const [activeInput, setActiveInput] = useState(\"1\");\n    const [fileNames, setFileNames] = useState([]);\n    const navigate = useNavigate();\n\n    const handleButtonClick = () => {\n        navigate(\"/\"); \n      };\n\n    const handleClear = () => {\n      setFileNames([])\n      setOutput(\"\");\n      if (fileInputRef.current) {\n        fileInputRef.current.value = \"\";\n      }\n    };\n\n    const handleConvert = async () => {\n      if (fileNames.length !== 1) {\n        alert(\"Please upload only one file for conversion.\");\n        return;\n      }\n    \n      const file = document.querySelector(\"input[type='file']\").files[0];\n      const fileType = file.type;\n    \n      if (\n        fileType !== \"application/pdf\" &&\n        fileType !== \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n      ) {\n        alert(\"Please upload a PDF or DOCX file.\");\n        return;\n      }\n    \n      const formData = new FormData();\n      formData.append(\"file\", file);\n    \n      try {\n        const response = await fetch(\"http://localhost:8080/diffFormatter/convertFile\", {\n          method: \"POST\",\n          body: formData,\n        });\n    \n        if (!response.ok) {\n          throw new Error(\"Conversion failed\");\n        }\n    \n        const blob = await response.blob(); // Get the response as a blob for download\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n    \n        \n        link.href = url;\n        link.setAttribute(\n          \"download\",\n          `converted_file.${fileType === \"application/pdf\" ? \"docx\" : \"pdf\"}`\n        ); // Set filename and extension based on conversion type\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n    \n      } catch (error) {\n        alert(\"Conversion failed:\", error);\n      }\n    };    \n    \n    const handleGlobal = () => {\n    };\n\n    return (\n    <div className=\"App\">\n        <header className=\"header\">\n        <div className=\"logo-container\">\n            <img src={logo} alt=\"Logo\" className=\"logo\" />\n        </div>\n        <div className=\"title-container\">\n            <h1 className=\"title\">Documents Handler (PDF - DOCX)</h1>\n            <button className=\"new-page-button\" onClick={handleButtonClick}>JSON - XML - EDI - PDF Handler</button>\n        </div>\n        </header>\n        <InputDocument\n        fileNames={fileNames}\n        setFileNames={setFileNames}\n        fileInputRef={fileInputRef} \n        />\n        <DocumentsButtons \n        handleClear={handleClear} \n        handleConvert={handleConvert}  \n        handleGlobal={handleGlobal} \n        />\n        <OutputDocument/>\n    </div>\n    );\n    };\n\nexport default DocumentsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}